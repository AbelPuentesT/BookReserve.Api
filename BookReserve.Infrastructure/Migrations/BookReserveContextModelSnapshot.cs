// <auto-generated />
using BookReserve.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookReserve.Infrastructure.Migrations
{
    [DbContext(typeof(BookReserveContext))]
    partial class BookReserveContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookReserve.Core.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("BookCategory")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<byte[]>("Image")
                        .HasColumnType("image");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Book__3214EC07ADF6505E");

                    b.ToTable("Book", (string)null);
                });

            modelBuilder.Entity("BookReserve.Core.Entities.Reserve", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("int")
                        .HasColumnName("Book_id");

                    b.Property<int>("Days")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_Id");

                    b.HasKey("Id")
                        .HasName("PK__Reserve__3214EC07BCE5A327");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("Reserve", (string)null);
                });

            modelBuilder.Entity("BookReserve.Core.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("image");

                    b.Property<int>("Reserves")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id")
                        .HasName("PK__User__3214EC07A9A2BAC8");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("BookReserve.Core.Entities.Reserve", b =>
                {
                    b.HasOne("BookReserve.Core.Entities.Book", "Book")
                        .WithMany("Reserves")
                        .HasForeignKey("BookId")
                        .IsRequired()
                        .HasConstraintName("FK_Reserve_Book");

                    b.HasOne("BookReserve.Core.Entities.User", "User")
                        .WithMany("ReservesNavigation")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Reserve_User");

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BookReserve.Core.Entities.Book", b =>
                {
                    b.Navigation("Reserves");
                });

            modelBuilder.Entity("BookReserve.Core.Entities.User", b =>
                {
                    b.Navigation("ReservesNavigation");
                });
#pragma warning restore 612, 618
        }
    }
}
